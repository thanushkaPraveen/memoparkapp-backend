"""Initial database migration

Revision ID: 9fbea684c467
Revises: 
Create Date: 2025-10-03 11:00:35.875852

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '9fbea684c467'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('UserType',
    sa.Column('user_type_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_type', sa.String(length=50), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('user_type_id'),
    sa.UniqueConstraint('user_type')
    )
    op.create_table('User',
    sa.Column('user_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_type_id', sa.Integer(), nullable=False),
    sa.Column('user_name', sa.String(length=100), nullable=False),
    sa.Column('date_of_birth', sa.Date(), nullable=True),
    sa.Column('user_email', sa.String(length=255), nullable=False),
    sa.Column('user_password', sa.String(length=255), nullable=False),
    sa.Column('language', sa.String(length=10), nullable=True),
    sa.Column('text_size', sa.Enum('small', 'medium', 'large', name='textsizeenum'), nullable=True),
    sa.Column('icon_size', sa.Enum('default', 'medium', 'large', name='iconsizeenum'), nullable=True),
    sa.Column('high_contrast_mode', sa.Boolean(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['user_type_id'], ['UserType.user_type_id'], ),
    sa.PrimaryKeyConstraint('user_id'),
    sa.UniqueConstraint('user_email')
    )
    op.create_table('EmergencyContact',
    sa.Column('emergency_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('emergency_contact_name', sa.String(length=100), nullable=False),
    sa.Column('relation', sa.String(length=50), nullable=True),
    sa.Column('emergency_email', sa.String(length=255), nullable=True),
    sa.Column('emergency_phone_number', sa.String(length=20), nullable=True),
    sa.Column('is_allow_alerts', sa.Boolean(), nullable=True),
    sa.Column('is_primary', sa.Boolean(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['User.user_id'], ),
    sa.PrimaryKeyConstraint('emergency_id')
    )
    op.create_table('ParkingEvent',
    sa.Column('parking_events_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('parking_latitude', sa.Numeric(precision=9, scale=6), nullable=False),
    sa.Column('parking_longitude', sa.Numeric(precision=9, scale=6), nullable=False),
    sa.Column('parking_location_name', sa.String(length=255), nullable=True),
    sa.Column('parking_address', sa.Text(), nullable=True),
    sa.Column('parking_type', sa.Enum('outside', 'inside_building', name='parkingtypeenum'), nullable=False),
    sa.Column('level_floor', sa.String(length=20), nullable=True),
    sa.Column('parking_slot', sa.String(length=20), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('photo_url', sa.String(length=2048), nullable=True),
    sa.Column('photo_s3_key', sa.String(length=1024), nullable=True),
    sa.Column('started_at', sa.TIMESTAMP(), nullable=True),
    sa.Column('ended_at', sa.TIMESTAMP(), nullable=True),
    sa.Column('status', sa.Enum('active', 'retrieved', 'expired', name='statusenum'), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['User.user_id'], ),
    sa.PrimaryKeyConstraint('parking_events_id')
    )
    op.create_table('Landmark',
    sa.Column('landmarks_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('parking_events_id', sa.Integer(), nullable=False),
    sa.Column('landmark_latitude', sa.Numeric(precision=9, scale=6), nullable=True),
    sa.Column('landmark_longitude', sa.Numeric(precision=9, scale=6), nullable=True),
    sa.Column('location_name', sa.String(length=255), nullable=True),
    sa.Column('distance_from_parking', sa.Float(), nullable=True),
    sa.Column('photo_url', sa.String(length=2048), nullable=True),
    sa.Column('photo_s3_key', sa.String(length=1024), nullable=True),
    sa.Column('is_achieved', sa.Boolean(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['parking_events_id'], ['ParkingEvent.parking_events_id'], ),
    sa.PrimaryKeyConstraint('landmarks_id')
    )
    op.create_table('Score',
    sa.Column('scores_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('parking_events_id', sa.Integer(), nullable=False),
    sa.Column('time_factor', sa.Float(), nullable=True),
    sa.Column('landmark_factor', sa.Float(), nullable=True),
    sa.Column('path_performance', sa.Float(), nullable=True),
    sa.Column('assistance_points', sa.Integer(), nullable=True),
    sa.Column('no_of_landmarks', sa.Integer(), nullable=True),
    sa.Column('landmarks_recalled', sa.Integer(), nullable=True),
    sa.Column('task_score', sa.Float(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['parking_events_id'], ['ParkingEvent.parking_events_id'], ),
    sa.PrimaryKeyConstraint('scores_id'),
    sa.UniqueConstraint('parking_events_id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('Score')
    op.drop_table('Landmark')
    op.drop_table('ParkingEvent')
    op.drop_table('EmergencyContact')
    op.drop_table('User')
    op.drop_table('UserType')
    # ### end Alembic commands ###
